{"version":3,"sources":["components/Counter/FeedbackOptions.jsx","components/Counter/Statistics.jsx","components/Counter/Section.jsx","components/Counter/Notification.jsx","components/Counter/Counter.jsx","App.js","index.js","components/Counter/Counter.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","good","neutral","bad","className","s","button","type","name","onClick","Statistics","total","positivePercentage","list","Section","title","children","defaultProps","Notification","message","Counter","state","handleFeedback","feedback","setState","prevState","countTotalFeedback","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","percentage","Math","round","this","React","Component","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+QAqCeA,EAjCS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACxBC,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,QAASC,EAAQJ,EAARI,IACvB,OACI,qCACI,wBAAQC,UAAWC,IAAEC,OACjBC,KAAK,SACLC,KAAMP,EACNQ,QAAS,kBAAMT,EAAgB,SAHnC,kBAOI,wBAAQI,UAAWC,IAAEC,OACrBC,KAAK,SACLC,KAAMN,EACNO,QAAS,kBAAMT,EAAgB,YAH/B,qBAOJ,wBAAQI,UAAWC,IAAEC,OACjBC,KAAK,SACLC,KAAML,EACNM,QAAS,kBAAMT,EAAgB,QAHnC,qBCLGU,EAdI,SAAC,GAAqD,IAApDT,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,IAAKQ,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBAC5C,OACI,mCACI,qBAAIR,UAAWC,IAAEQ,KAAjB,UACI,uCAAUZ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWQ,KACX,oDAAuBC,EAAvB,aCRVE,EAAU,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACrB,OACI,gCACI,6BAAKD,IAAYC,MAK7BF,EAAQG,aAAe,CACnBF,MAAO,IAQID,QCjBTI,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,8BACI,4BAAIA,OAKhBD,EAAaD,aAAe,CACxBE,QAAS,IAOED,QCZTE,E,4MAeFC,MAAQ,CACJpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTmB,eAAiB,SAAAC,GACb,EAAKC,UAAS,SAAAC,GACZ,OAAO,eAAGF,EAAWE,EAAUF,GAAY,O,EAIjDG,mBAAqB,WACjB,OAAOC,OAAOC,OAAO,EAAKP,OAAOQ,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAGzEC,gCAAkC,WAC9B,IAAMC,EAAaC,KAAKC,MAAM,IAAM,EAAKd,MAAMpB,KAAO,EAAKyB,sBAC3D,OAAOO,EAAa,EAAIA,EAAa,G,uDAIrC,IAAMtB,EAAQyB,KAAKV,qBACbd,EAAqBwB,KAAKJ,kCAChC,OACI,qCACI,cAAC,EAAD,CAASjB,MAAM,wBAAf,SACA,cAAC,EAAD,CACIhB,QAASqC,KAAKf,MACdrB,gBAAiBoC,KAAKd,mBAGf,IAAVX,EAAe,cAAC,EAAD,CAAcQ,QAAQ,sBAEtC,cAAC,EAAD,CAASJ,MAAM,aAAf,SACA,cAAC,EAAD,CACId,KAAMmC,KAAKf,MAAMpB,KACjBC,QAASkC,KAAKf,MAAMnB,QACpBC,IAAKiC,KAAKf,MAAMlB,IAChBQ,MAAOA,EACPC,mBAAoBA,a,GAvDlByB,IAAMC,WAAtBlB,EACKH,aAAe,CAClBhB,KAAM,EACNC,QAAS,EACTC,IAAK,EACLQ,MAAO,EACPC,mBAAoB,GA0DbQ,QC9DAmB,EANH,kBACV,8BACE,cAAC,EAAD,OCCJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,KAAO,sBAAsB,OAAS,2B","file":"static/js/main.57820d0e.chunk.js","sourcesContent":["import React from 'react';\r\nimport s from './Counter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    const { good, neutral, bad } = options;\r\n    return (\r\n        <>\r\n            <button className={s.button}\r\n                type=\"button\"\r\n                name={good}\r\n                onClick={() => onLeaveFeedback('good')}\r\n                >\r\n                Good\r\n            </button>\r\n                <button className={s.button}\r\n                type=\"button\"\r\n                name={neutral}\r\n                onClick={() => onLeaveFeedback('neutral')}\r\n                >\r\n                Neutral\r\n            </button>\r\n            <button className={s.button}\r\n                type=\"button\"\r\n                name={bad}\r\n                onClick={() => onLeaveFeedback('bad')}\r\n                >\r\n                Bad\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n    onLeaveFeedback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport s from './Counter.module.css';\r\n\r\nconst Statistics = ({good, neutral, bad, total, positivePercentage}) => {\r\n    return (\r\n        <>\r\n            <ul className={s.list}>\r\n                <li>Good:{good}</li>\r\n                <li>Neutral:{neutral}</li>\r\n                <li>Bad:{bad}</li>\r\n                <li>Total:{total}</li>\r\n                <li>Positive feadback:{positivePercentage}%</li>\r\n            </ul>\r\n        </>\r\n    );\r\n};\r\n    \r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({title, children}) => {\r\n    return (\r\n        <div>\r\n            <h1>{title}</h1>{children}\r\n        </div>\r\n    );\r\n};\r\n\r\nSection.defaultProps = {\r\n    title: \"\",\r\n};\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <div>\r\n            <p>{message}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nNotification.defaultProps = {\r\n    message: \"\",\r\n};\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport FeedbackOptions from './FeedbackOptions';\r\nimport Statistics from './Statistics';\r\nimport PropTypes from 'prop-types';\r\nimport Section from './Section';\r\nimport Notification from './Notification';\r\n\r\nclass Counter extends React.Component {\r\n    static defaultProps = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n        total: 0,\r\n        positivePercentage: 0\r\n    }\r\n    static propTypes = {\r\n        good: PropTypes.number,\r\n        neutral: PropTypes.number,\r\n        bad: PropTypes.number,\r\n        total: PropTypes.number,\r\n        positivePercentage: PropTypes.number\r\n    }\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    };\r\n  \r\n    handleFeedback = feedback => {\r\n        this.setState(prevState => {\r\n          return { [feedback]: prevState[feedback] + 1 };\r\n        });\r\n    }\r\n    \r\n    countTotalFeedback = () => {\r\n        return Object.values(this.state).reduce((acc, value) => acc + value, 0)\r\n    }\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        const percentage = Math.round(100 * this.state.good / this.countTotalFeedback());\r\n        return percentage > 0 ? percentage : 0;\r\n    }\r\n\r\n    render() {\r\n        const total = this.countTotalFeedback();\r\n        const positivePercentage = this.countPositiveFeedbackPercentage();\r\n        return (\r\n            <>\r\n                <Section title=\"Please leave feadback\">\r\n                <FeedbackOptions\r\n                    options={this.state}\r\n                    onLeaveFeedback={this.handleFeedback}\r\n                    />\r\n                </Section>\r\n                {total === 0 ? (<Notification message=\"No feedback given\" />)\r\n                    : (\r\n                <Section title=\"Statistics\">\r\n                <Statistics\r\n                    good={this.state.good}\r\n                    neutral={this.state.neutral}\r\n                    bad={this.state.bad}\r\n                    total={total}\r\n                    positivePercentage={positivePercentage}\r\n                    />\r\n                    </Section>\r\n                    )}\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Counter;","import React from 'react';\nimport Counter from './components/Counter/Counter';\n\nconst App = () => (\n  <div>\n    <Counter />\n    </div>\n  );\n\nexport default App;\n\n\n\n//Шаг4\n//Расширь функционал приложения так, чтобы блок статистики рендерился только после того, как был собран хотя бы один отзыв. \n//Сообщение об отсутствиии статистики вынеси в компонент < Notification message = \"No feedback given\" >","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Counter_list__AKifl\",\"button\":\"Counter_button__38-7b\"};"],"sourceRoot":""}